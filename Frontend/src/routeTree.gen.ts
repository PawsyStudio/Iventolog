/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as EventsImport } from './routes/events'
import { Route as IndexImport } from './routes/index'
import { Route as EventEventIdImport } from './routes/event.$eventId'
import { Route as EventEventIdGuestRegisterImport } from './routes/event.$eventId.guest-register'

// Create/Update Routes

const EventsRoute = EventsImport.update({
  id: '/events',
  path: '/events',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const EventEventIdRoute = EventEventIdImport.update({
  id: '/event/$eventId',
  path: '/event/$eventId',
  getParentRoute: () => rootRoute,
} as any)

const EventEventIdGuestRegisterRoute = EventEventIdGuestRegisterImport.update({
  id: '/guest-register',
  path: '/guest-register',
  getParentRoute: () => EventEventIdRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/events': {
      id: '/events'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof EventsImport
      parentRoute: typeof rootRoute
    }
    '/event/$eventId': {
      id: '/event/$eventId'
      path: '/event/$eventId'
      fullPath: '/event/$eventId'
      preLoaderRoute: typeof EventEventIdImport
      parentRoute: typeof rootRoute
    }
    '/event/$eventId/guest-register': {
      id: '/event/$eventId/guest-register'
      path: '/guest-register'
      fullPath: '/event/$eventId/guest-register'
      preLoaderRoute: typeof EventEventIdGuestRegisterImport
      parentRoute: typeof EventEventIdImport
    }
  }
}

// Create and export the route tree

interface EventEventIdRouteChildren {
  EventEventIdGuestRegisterRoute: typeof EventEventIdGuestRegisterRoute
}

const EventEventIdRouteChildren: EventEventIdRouteChildren = {
  EventEventIdGuestRegisterRoute: EventEventIdGuestRegisterRoute,
}

const EventEventIdRouteWithChildren = EventEventIdRoute._addFileChildren(
  EventEventIdRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/events': typeof EventsRoute
  '/event/$eventId': typeof EventEventIdRouteWithChildren
  '/event/$eventId/guest-register': typeof EventEventIdGuestRegisterRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/events': typeof EventsRoute
  '/event/$eventId': typeof EventEventIdRouteWithChildren
  '/event/$eventId/guest-register': typeof EventEventIdGuestRegisterRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/events': typeof EventsRoute
  '/event/$eventId': typeof EventEventIdRouteWithChildren
  '/event/$eventId/guest-register': typeof EventEventIdGuestRegisterRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/events'
    | '/event/$eventId'
    | '/event/$eventId/guest-register'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/events' | '/event/$eventId' | '/event/$eventId/guest-register'
  id:
    | '__root__'
    | '/'
    | '/events'
    | '/event/$eventId'
    | '/event/$eventId/guest-register'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  EventsRoute: typeof EventsRoute
  EventEventIdRoute: typeof EventEventIdRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EventsRoute: EventsRoute,
  EventEventIdRoute: EventEventIdRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/events",
        "/event/$eventId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/events": {
      "filePath": "events.tsx"
    },
    "/event/$eventId": {
      "filePath": "event.$eventId.tsx",
      "children": [
        "/event/$eventId/guest-register"
      ]
    },
    "/event/$eventId/guest-register": {
      "filePath": "event.$eventId.guest-register.tsx",
      "parent": "/event/$eventId"
    }
  }
}
ROUTE_MANIFEST_END */
